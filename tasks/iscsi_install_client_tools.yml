---

- include_tasks:
    file: _task_header.yml
  vars:
    kol_utils_name: "iscsi install client tools"
    kol_utils_params:
      iscsi_initiatorname: "{{ iscsi_initiatorname | default('dontset') }}"
      disable_iser:        "{{ disable_iser | default(False) }}"

########################################

- name: "process local vars"
  set_fact:
    _iscsi_service_name: "{{ 'open-iscsi.service' if (ansible_distribution=='Ubuntu') else 'iscsi.service' }}"

- name: "install open-iscsi and lsscsi"
  become: yes
  register: apt_result
  notify: "Reboot"
  retries: 3
  delay: 5
  until: apt_result is not failed
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: ["open-iscsi","lsscsi"]
    state: present
    install_recommends: no
    update_cache: yes
    cache_valid_time: 3600 # Only run "update_cache=yes" if the last one is more than 3600 seconds ago

- name: "disable ib_iser" # <- causes (mostly harmless) error during raspbain boot on pi4b
  become: yes
  register: iscsi_iser_result
  notify: "Reboot"
  lineinfile:
    path: "/lib/modules-load.d/open-iscsi.conf"
    regexp: '^(ib_iser)$'
    line: '#\1'
    backrefs: yes
  when: _params['disable_iser']

- include_tasks: iscsi_set_initiatorname.yml
  vars:
    iscsi_initiatorname: "{{ _params['iscsi_initiatorname'] }}"
  when: _params['iscsi_initiatorname'] != 'dontset'

- name: "enable iscsi service"
  become: yes
  notify: "Reboot"
  register: iscsi_service_enabled_result
  systemd:
    name: "{{ _iscsi_service_name }}"
    enabled: yes

- name: "start iscsi service"
  become: yes
  notify: "Reboot"
  register: iscsi_service_start_result
  systemd:
    name: "{{ _iscsi_service_name }}"
    state: "{{'restarted' if (iscsi_iser_result is defined and iscsi_iser_result.changed) else 'started'}}"

########################################

- include_tasks:
    file: _task_footer.yml
  vars:
    kol_utils_exit_vars:
      [
        "apt_result:                           {{ apt_result }}",
        "iscsi_iser_result:                    {{ iscsi_iser_result }}",
        "iscsi_service_enabled_result.enabled: {{ iscsi_service_enabled_result.enabled }}",
        "iscsi_service_start_result.state:     {{ iscsi_service_start_result.state }}"
      ]

